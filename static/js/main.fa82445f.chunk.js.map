{"version":3,"sources":["components/ExplodingAtoms/logo.svg","components/Section.js","components/ExplodingAtoms/index.js","sections/Welcome.js","sections/About.js","sections/CodeOfConduct.js","components/Person.js","sections/Founders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Section","_ref","section","children","nextSection","react_default","a","createElement","id","concat","ExplodingAtoms","_useState","useState","_useState2","Object","slicedToArray","transition","setTransition","useEffect","timer","setTimeout","clearTimeout","className","src","logo","alt","Welcome","About","href","CodeOfConduct","Person","imageUrl","name","twitter","_name$split","split","_name$split2","firstName","lastName","rel","target","founders","Founders","map","sections","App","Fragment","components_ExplodingAtoms","i","_ref2","Component","hash","components_Section","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa82445f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f873db44.svg\";","import React from 'react';\n\nconst Section = ({ section, nextSection, children }) => (\n  <section id={`${section}`}>\n    {children}\n    {'' && nextSection && (\n      <div>\n        <a href={`#${nextSection}`}>next</a>\n      </div>\n    )}\n  </section>\n);\nexport default Section;\n","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\n\nconst ExplodingAtoms = () => {\n  const [transition, setTransition] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTransition(true);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div className=\"fixed background\">\n      <img\n        src={logo}\n        className={`react-logo transition ${transition ? 'start' : ''}`}\n        alt=\"react logo\"\n      />\n    </div>\n  );\n};\nexport default ExplodingAtoms;\n","import React from 'react';\n\nconst Welcome = () => (\n  <div className=\"welcome\">\n    <h1>Welcome to useReact.NYC</h1>\n    <p>\n      The Home of New York City's Newest and Most Exciting React Community\n      Meetup\n    </p>\n    <div className=\"next\">›</div>\n  </div>\n);\n\nexport default Welcome;\n","import React from 'react';\n\nconst About = () => (\n  <div>\n    <h2>What is useReact.NYC?</h2>\n    <p>\n      Well… you are! useReact.NYC is about the React community right here in New\n      York City. It's not about any one company or a core group of individuals.\n      We were founded on the principle that everyone deserves to be treated with\n      respect. We all deserve a safe, judgement free place to congregate—online,\n      and in person.\n    </p>\n    <p>\n      Please see our <a href=\"#coc\">Code of Conduct</a> for complete details.\n    </p>\n\n    <h3>You can find us here</h3>\n    <ul>\n      <li>\n        Follow us on Twitter{' '}\n        <a href=\"https://twitter.com/useReactNYC\">@useReactNYC</a>\n      </li>\n      <li>\n        Join us on <a href=\"https://www.meetup.com/useReactNYC/\">Meetup.com</a>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default About;\n","import React from 'react';\n\nconst CodeOfConduct = () => (\n  <div className=\"about\">\n    <h2>Code of Conduct</h2>\n\n    <p>\n      useReactNYC is dedicated to providing a harassment-free meetup experience\n      for everyone. We do not tolerate harassment of meetup participants in any\n      form. Meetup participants violating these rules may be sanctioned or\n      expelled from the meetup at the discretion of the meetup organizers. If\n      this is a paid event they may be expelled without a meetup at the\n      discretion of the meetup organizers.\n    </p>\n\n    <p>\n      Harassment includes offensive verbal comments related to gender, gender\n      identity and expression, sexual orientation, disability, physical\n      appearance, body size, race, religion, sexual images in public spaces,\n      deliberate intimidation, stalking, following, harassing photography or\n      recording, sustained disruption of talks or other events, inappropriate\n      physical contact, and unwelcome sexual attention. Participants asked to\n      stop any harassing behavior are expected to comply immediately.\n    </p>\n\n    <p>\n      Exhibitors and speakers at any useReactNYC event also subject to the\n      anti-harassment policy. In particular, exhibitors/speakers should not use\n      sexualized images, activities, or other material. Staff (including\n      volunteers) should not use sexualized clothing/uniforms/costumes, or\n      otherwise create a sexualized environment.\n    </p>\n\n    <p>\n      If a participant engages in harassing behavior, the meetup organizers may\n      take any action they deem appropriate, including warning the offender or\n      expulsion from the event with no refund (if applicable). In the event of\n      serious infractions of the code of conduct, useReactNYC staff may share\n      incident details and offenders’ names with third parties including but not\n      limited to: venue staff, local law enforcement, and staff of other\n      meetups/conferences. If you are being harassed, notice that someone else\n      is being harassed, or have any other concerns, please contact a member of\n      meetup staff immediately.\n    </p>\n\n    <p>\n      useReactNYC has an additional rule of no videotaping or photography\n      without prior permission. If you wish to photograph, film or record any\n      attendee, including speakers, you must first ask for their permission to\n      do so.\n    </p>\n\n    <p>\n      Meetup staff will be happy to help participants contact venue security or\n      local law enforcement, provide escorts, or otherwise assist those\n      experiencing harassment to feel safe for the duration of events. We value\n      your attendance.\n    </p>\n\n    <p>\n      We expect participants to follow these rules at all conference venues and\n      conference-related social events.\n    </p>\n\n    <h3>Resources</h3>\n\n    <ul>\n      <li>Email address for organizers organizers@usereact.nyc</li>\n      <li>Phone number for organizers 914-297-8806</li>\n      <li>Local law enforcement, emergency 911</li>\n      <li>Local law enforcement, non-emergency 311</li>\n      <li>Local sexual assault hotline 800-621-HOPE (4673) or dial 311</li>\n      <li>Local medical, emergency 911</li>\n      <li>Local medical, non-emergency 311</li>\n    </ul>\n  </div>\n);\n\nexport default CodeOfConduct;\n","import React from 'react';\n\nconst Person = ({ imageUrl, name, twitter }) => {\n  const [firstName, lastName] = name.split(' ');\n  return (\n    <li className=\"person\">\n      <a\n        href={`https://twitter.com/${twitter}`}\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        <div>\n          {firstName}\n          <br />\n          {lastName}\n        </div>\n        <img src={imageUrl} alt={name} />\n      </a>\n    </li>\n  );\n};\n\nexport default Person;\n","import React from 'react';\nimport Person from '../components/Person';\n\nconst founders = [\n  {\n    name: 'Donavon West',\n    twitter: 'donavon',\n    imageUrl:\n      'https://pbs.twimg.com/profile_images/1040248648033083392/vw9pa7pf_400x400.jpg',\n  },\n  {\n    name: 'Matthew Gerstman',\n    twitter: 'MatthewGerstman',\n    imageUrl:\n      'https://pbs.twimg.com/profile_images/1089974601994493952/KnSqLrVE_400x400.jpg',\n  },\n  {\n    name: 'Jenn Creighton',\n    twitter: 'gurlcode',\n    imageUrl:\n      'https://pbs.twimg.com/profile_images/551829293534154752/Y_YsnG3G_400x400.jpeg',\n  },\n  {\n    name: 'Harry Wolff',\n    twitter: 'hswolff',\n    imageUrl:\n      'https://pbs.twimg.com/profile_images/802683824840839168/0QIZhM09_400x400.jpg',\n  },\n];\n\nconst Founders = () => (\n  <div>\n    <h2>No really. Who are the organizers?</h2>\n    <ul>{founders.map(Person)}</ul>\n  </div>\n);\n\nexport default Founders;\n","import React from 'react';\nimport Section from './components/Section';\nimport ExplodingAtoms from './components/ExplodingAtoms';\nimport Welcome from './sections/Welcome';\nimport About from './sections/About';\nimport CodeOfConduct from './sections/CodeOfConduct';\nimport Founders from './sections/Founders';\nimport SocialRules from './sections/SocialRules';\nimport './App.scss';\n\nconst sections = [\n  [Welcome, 'welcome'],\n  [About, 'about'],\n  [CodeOfConduct, 'coc'],\n  // [SocialRules, 'social-rules'],\n  [Founders, 'founders'],\n];\n\nconst App = () => (\n  <>\n    <ExplodingAtoms />\n    <div className=\"fixed\">\n      <div className=\"app\">\n        {sections.map(([Component, hash], i) => (\n          <Section section={hash} nextSection={(sections[i + 1] || [])[1]}>\n            <Component />\n          </Section>\n        ))}\n      </div>\n    </div>\n  </>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}